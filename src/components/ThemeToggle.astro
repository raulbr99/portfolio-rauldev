---
// components/ThemeToggle.astro
import SunIcon from "../components/icons/Sun.astro";
import MoonIcon from "../components/icons/Moon.astro";
import SystemIcon from "../components/icons/System.astro";
---
<style>
  .toggle-icon { transition: opacity .2s, transform .2s; }
  /* Cuando un icono esté hidden, que no ocupe espacio */
  .toggle-icon.hidden { opacity: 0; transform: scale(0); }
  #theme-options { transition: transform .15s, opacity .15s; }
  #theme-options.open {
    display: block;
    transform: scale(1);
    opacity: 1;
  }
</style>

<div class="relative inline-block">
  <button
    id="theme-toggle-btn"
    aria-haspopup="true"
    aria-expanded="false"
    class="p-1 rounded hover:bg-gray-200 dark:hover:bg-gray-700"
  >
    <span class="sr-only">Cambiar tema</span>
    <SunIcon    id="icon-light"  class="toggle-icon size-5" />
    <MoonIcon   id="icon-dark"   class="toggle-icon size-5 hidden absolute inset-0" />
    <SystemIcon id="icon-system" class="toggle-icon size-5 hidden absolute inset-0" />
  </button>

  <ul
    id="theme-options"
    class="hidden absolute right-0 mt-1 p-1 bg-white dark:bg-gray-800 border rounded shadow-lg text-sm"
  >
    <li data-theme="light"  class="px-2 py-1 hover:bg-gray-100 dark:hover:bg-gray-700 cursor-pointer">Light</li>
    <li data-theme="dark"   class="px-2 py-1 hover:bg-gray-100 dark:hover:bg-gray-700 cursor-pointer">Dark</li>
    <li data-theme="system" class="px-2 py-1 hover:bg-gray-100 dark:hover:bg-gray-700 cursor-pointer">System</li>
  </ul>
</div>

<script type="module" client-load>
  const html       = document.documentElement;
  const btn        = document.getElementById('theme-toggle-btn');
  const menu       = document.getElementById('theme-options');
  const icons      = {
    light:  document.getElementById('icon-light'),
    dark:   document.getElementById('icon-dark'),
    system: document.getElementById('icon-system'),
  };

  const getStoredTheme = () => localStorage.getItem('theme') || 'system';

  const applyTheme = (theme) => {
    // Calcula el tema efectivo
    const isDark = theme === 'dark'
      || (theme === 'system' && window.matchMedia('(prefers-color-scheme: dark)').matches);

    html.classList.toggle('dark', isDark);

    // Muestra sólo el icono activo
    Object.entries(icons).forEach(([key, el]) => {
      el.classList.toggle('hidden', key !== theme);
    });
  };

  // Inicial
  applyTheme(getStoredTheme());

  // Cambios en sistema
  window.matchMedia('(prefers-color-scheme: dark)')
    .addEventListener('change', () => {
      if (getStoredTheme() === 'system') {
        applyTheme('system');
      }
    });

  // Toggle menú
  btn.addEventListener('click', (e) => {
    e.stopPropagation();
    const expanded = btn.getAttribute('aria-expanded') === 'true';
    btn.setAttribute('aria-expanded', String(!expanded));
    menu.classList.toggle('open');
  });

  // Selección de tema (delegación)
  menu.addEventListener('click', (e) => {
    const li = e.target.closest('[data-theme]');
    if (!li) return;
    const theme = li.dataset.theme;
    localStorage.setItem('theme', theme);
    applyTheme(theme);
    menu.classList.remove('open');
    btn.setAttribute('aria-expanded', 'false');
  });

  // Cierra al clickar fuera
  document.addEventListener('click', () => {
    menu.classList.remove('open');
    btn.setAttribute('aria-expanded', 'false');
  });
</script>
